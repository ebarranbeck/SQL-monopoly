/* Ellie Barran Beck, 10328801*/


DROP TABLE IF EXISTS Properties;
DROP TABLE IF EXISTS Players;
DROP TABLE IF EXISTS AuditTrail;
DROP TABLE IF EXISTS Bonuses;
DROP TABLE IF EXISTS Location;
DROP TABLE IF EXISTS Tokens;
DROP TABLE IF EXISTS LocationType;
DROP VIEW IF EXISTS gameView;
DROP TRIGGER IF EXISTS takenTurn;

CREATE TABLE Tokens(
ID INT PRIMARY KEY,
Name VARCHRAR(30)  NOT NULL);


CREATE TABLE LocationType(
ID INT PRIMARY KEY,
Type VARCHAR(30)
); 

CREATE TABLE Location(
ID INT PRIMARY KEY,
Name VARCHAR(30) NOT NULL,
LocationType INT NOT NULL,
FOREIGN KEY(LocationType) REFERENCES LocationType(ID)
);


CREATE TABLE Bonuses(
ID INT PRIMARY KEY,
Name VARCHAR(30) NOT NULL,
Description VARCHAR(250) NOT NULL
);

CREATE TABLE AuditTrail(
GamePlay  INTEGER PRIMARY KEY AUTOINCREMENT,
PlayerID INT NOT NULL,
Location VARCHAR(30) NOT NULL,
BankBalance INT NOT NULL);


CREATE TABLE Players(
ID INT PRIMARY KEY,
Name VARCHAR(30) NOT NULL,
Token INT NOT NULL UNIQUE ,
BankBalance INT NOT NULL,
CurrentLoc INT NOT NULL,
AnyBonus INT,
GameRound INT NOT NULL DEFAULT 1,
FOREIGN KEY(Token) REFERENCES Tokens(ID),
FOREIGN KEY (CurrentLoc) REFERENCES Location(ID),
FOREIGN  KEY (AnyBonus) REFERENCES Bonuses(ID)
);

CREATE TABLE Properties(
ID INT PRIMARY KEY,
Name VARCHAR(30),
Cost INT NOT NULL,
Colour VARCHAR(30) NOT NULL,
OwnerID INT ,
FOREIGN KEY (OwnerID) REFERENCES Players(ID)
);


 CREATE TRIGGER takenTurn
AFTER UPDATE OF CurrentLoc ON Players
FOR EACH ROW
BEGIN 
    INSERT INTO AuditTrail(PlayerID, Location, BankBalance)
    VALUES(NEW.ID, NEW.CurrentLoc, NEW.BankBalance)
	;
END; 




